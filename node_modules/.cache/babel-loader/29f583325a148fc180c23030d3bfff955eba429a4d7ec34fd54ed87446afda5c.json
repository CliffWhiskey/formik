{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cwill\\\\OneDrive\\\\Documents\\\\MIT MERN Full Stack\\\\module 13\\\\build-a-formik-form_starter\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n// TODO: import useFormik from formik library\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: values => {\n      alert(\"Login Successful\");\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.email) errors.email = \"field required\";\n      if (!values.password) errors.password = \"field required\";\n      return errors;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"emailField\",\n        type: \"text\",\n        name: \"email\",\n        onChange: formik.handleChange,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"emailError\",\n        style: {\n          color: \"red\"\n        },\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"pswField\",\n        type: \"text\",\n        name: \"password\",\n        onChange: formik.handleChange,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this), formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pswError\",\n        style: {\n          color: \"red\"\n        },\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submitBtn\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useFormik","App","formik","initialValues","email","password","onSubmit","values","alert","validate","errors","handleSubmit","handleChange","color"],"sources":["C:/Users/cwill/OneDrive/Documents/MIT MERN Full Stack/module 13/build-a-formik-form_starter/src/App.js"],"sourcesContent":["import React from \"react\";\n// TODO: import useFormik from formik library\nimport { useFormik } from \"formik\";\n\nfunction App() {\n  // TODO: add a const called formik assigned to useFormik()\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n            password: \"\",\n        },\n        onSubmit: (values) => {\n            alert(\"Login Successful\");\n        },\n        validate: (values) => {\n            let errors = {};\n            if (!values.email) errors.email = \"field required\";\n            if (!values.password) errors.password = \"field required\";\n            return errors;\n        },\n    });\n  return (\n    <div>\n          <form onSubmit={formik.handleSubmit}>\n              <div>Email:</div>\n              <input\n                  id=\"emailField\"\n                  type=\"text\"\n                  name=\"email\"\n                  onChange={formik.handleChange}\n                  value={formik.values.email}\n              />\n              {formik.errors.email ? (\n                  <div id=\"emailError\" style={{ color: \"red\" }}>\n                      {formik.errors.email}\n                  </div>\n              ) : null}\n              <div>Password:</div>\n              <input\n                  id=\"pswField\"\n                  type=\"text\"\n                  name=\"password\"\n                  onChange={formik.handleChange}\n                  value={formik.values.password}\n              />\n              <br />\n              {formik.errors.password ? (\n                  <div id=\"pswError\" style={{ color: \"red\" }}>\n                      {formik.errors.password}\n                  </div>\n              ) : null}\n              <button id=\"submitBtn\" type=\"submit\">\n                  Submit\n              </button>\n          </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,SAASC,SAAS,QAAQ,QAAQ;AAAC;AAEnC,SAASC,GAAG,GAAG;EAAA;EACb;EACE,MAAMC,MAAM,GAAGF,SAAS,CAAC;IACrBG,aAAa,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACd,CAAC;IACDC,QAAQ,EAAGC,MAAM,IAAK;MAClBC,KAAK,CAAC,kBAAkB,CAAC;IAC7B,CAAC;IACDC,QAAQ,EAAGF,MAAM,IAAK;MAClB,IAAIG,MAAM,GAAG,CAAC,CAAC;MACf,IAAI,CAACH,MAAM,CAACH,KAAK,EAAEM,MAAM,CAACN,KAAK,GAAG,gBAAgB;MAClD,IAAI,CAACG,MAAM,CAACF,QAAQ,EAAEK,MAAM,CAACL,QAAQ,GAAG,gBAAgB;MACxD,OAAOK,MAAM;IACjB;EACJ,CAAC,CAAC;EACJ,oBACE;IAAA,uBACM;MAAM,QAAQ,EAAER,MAAM,CAACS,YAAa;MAAA,wBAChC;QAAA,UAAK;MAAM;QAAA;QAAA;QAAA;MAAA,QAAM,eACjB;QACI,EAAE,EAAC,YAAY;QACf,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,OAAO;QACZ,QAAQ,EAAET,MAAM,CAACU,YAAa;QAC9B,KAAK,EAAEV,MAAM,CAACK,MAAM,CAACH;MAAM;QAAA;QAAA;QAAA;MAAA,QAC7B,EACDF,MAAM,CAACQ,MAAM,CAACN,KAAK,gBAChB;QAAK,EAAE,EAAC,YAAY;QAAC,KAAK,EAAE;UAAES,KAAK,EAAE;QAAM,CAAE;QAAA,UACxCX,MAAM,CAACQ,MAAM,CAACN;MAAK;QAAA;QAAA;QAAA;MAAA,QAClB,GACN,IAAI,eACR;QAAA,UAAK;MAAS;QAAA;QAAA;QAAA;MAAA,QAAM,eACpB;QACI,EAAE,EAAC,UAAU;QACb,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,UAAU;QACf,QAAQ,EAAEF,MAAM,CAACU,YAAa;QAC9B,KAAK,EAAEV,MAAM,CAACK,MAAM,CAACF;MAAS;QAAA;QAAA;QAAA;MAAA,QAChC,eACF;QAAA;QAAA;QAAA;MAAA,QAAM,EACLH,MAAM,CAACQ,MAAM,CAACL,QAAQ,gBACnB;QAAK,EAAE,EAAC,UAAU;QAAC,KAAK,EAAE;UAAEQ,KAAK,EAAE;QAAM,CAAE;QAAA,UACtCX,MAAM,CAACQ,MAAM,CAACL;MAAQ;QAAA;QAAA;QAAA;MAAA,QACrB,GACN,IAAI,eACR;QAAQ,EAAE,EAAC,WAAW;QAAC,IAAI,EAAC,QAAQ;QAAA,UAAC;MAErC;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACN;IAAA;IAAA;IAAA;EAAA,QACP;AAEV;AAAC,GArDQJ,GAAG;EAAA,QAEOD,SAAS;AAAA;AAAA,KAFnBC,GAAG;AAuDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}